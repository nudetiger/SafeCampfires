import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

apply plugin: 'com.github.johnrengelman.shadow'

group = 'me.rakkoon69'
version = '1.0-SNAPSHOT'

sourceCompatibility = '17'
targetCompatibility = '17'

repositories {
    mavenCentral()
    mavenLocal()

    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }

    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }

    maven {
        name = 'jitpack.io'
        url = "https://jitpack.io"
    }

}

dependencies {
    shadow localGroovy()
    shadow gradleApi()

    compileOnly("com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT")
    compileOnly("com.github.decentsoftware-eu:decentholograms:2.8.6")
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}

jar {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(Copy).all { duplicatesStrategy 'exclude' }

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

shadowJar {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}
